{"ast":null,"code":"var _jsxFileName = \"/Users/lerenzomartinez/Desktop/Ga/nature/Nature-Navigator/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PORT = 8000;\nconst express = require('express');\nconst cors = require('cors');\nconst axios = require('axios');\nrequire('dotenv').config();\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 3\n}, this));\nconst app = express();\napp.get('/', (req, res => {\n  res.json('hi');\n}));\napp.listen(8000, () => console.log(`Server is running on ${PORT}`));","map":{"version":3,"names":["React","ReactDOM","App","BrowserRouter","PORT","express","require","cors","axios","config","root","createRoot","document","getElementById","render","app","get","req","res","json","listen","console","log"],"sources":["/Users/lerenzomartinez/Desktop/Ga/nature/Nature-Navigator/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\n\nconst PORT =  8000\nconst express = require('express')\nconst cors = require('cors')\nconst axios = require ('axios')\nrequire ('dotenv').config()\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\nconst app = express()\n\napp.get('/', (req, res => {\n    res.json('hi')\n}))\n\napp.listen(8000, () => console.log(`Server is running on ${PORT}`))"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,aAAa,QAAQ,kBAAkB;AAAA;AAEhD,MAAMC,IAAI,GAAI,IAAI;AAClB,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,KAAK,GAAGF,OAAO,CAAE,OAAO,CAAC;AAC/BA,OAAO,CAAE,QAAQ,CAAC,CAACG,MAAM,EAAE;AAE3B,MAAMC,IAAI,GAAGT,QAAQ,CAACU,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACT,QAAC,KAAK,CAAC,UAAU;EAAA,uBACf,QAAC,aAAa;IAAA,uBACd,QAAC,GAAG;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA;AACS;EAAA;EAAA;EAAA;AAAA,QACC,CACpB;AAED,MAAMC,GAAG,GAAGV,OAAO,EAAE;AAErBU,GAAG,CAACC,GAAG,CAAC,GAAG,GAAGC,GAAG,EAAEC,GAAG,IAAI;EACtBA,GAAG,CAACC,IAAI,CAAC,IAAI,CAAC;AAClB,CAAC,EAAE;AAEHJ,GAAG,CAACK,MAAM,CAAC,IAAI,EAAE,MAAMC,OAAO,CAACC,GAAG,CAAE,wBAAuBlB,IAAK,EAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}